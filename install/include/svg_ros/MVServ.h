// Generated by gencpp from file svg_ros/MVServ.msg
// DO NOT EDIT!


#ifndef SVG_ROS_MESSAGE_MVSERV_H
#define SVG_ROS_MESSAGE_MVSERV_H

#include <ros/service_traits.h>


#include <svg_ros/MVServRequest.h>
#include <svg_ros/MVServResponse.h>


namespace svg_ros
{

struct MVServ
{

typedef MVServRequest Request;
typedef MVServResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct MVServ
} // namespace svg_ros


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::svg_ros::MVServ > {
  static const char* value()
  {
    return "a5027d7394e6db0c454d58003c11ba06";
  }

  static const char* value(const ::svg_ros::MVServ&) { return value(); }
};

template<>
struct DataType< ::svg_ros::MVServ > {
  static const char* value()
  {
    return "svg_ros/MVServ";
  }

  static const char* value(const ::svg_ros::MVServ&) { return value(); }
};


// service_traits::MD5Sum< ::svg_ros::MVServRequest> should match 
// service_traits::MD5Sum< ::svg_ros::MVServ > 
template<>
struct MD5Sum< ::svg_ros::MVServRequest>
{
  static const char* value()
  {
    return MD5Sum< ::svg_ros::MVServ >::value();
  }
  static const char* value(const ::svg_ros::MVServRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::svg_ros::MVServRequest> should match 
// service_traits::DataType< ::svg_ros::MVServ > 
template<>
struct DataType< ::svg_ros::MVServRequest>
{
  static const char* value()
  {
    return DataType< ::svg_ros::MVServ >::value();
  }
  static const char* value(const ::svg_ros::MVServRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::svg_ros::MVServResponse> should match 
// service_traits::MD5Sum< ::svg_ros::MVServ > 
template<>
struct MD5Sum< ::svg_ros::MVServResponse>
{
  static const char* value()
  {
    return MD5Sum< ::svg_ros::MVServ >::value();
  }
  static const char* value(const ::svg_ros::MVServResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::svg_ros::MVServResponse> should match 
// service_traits::DataType< ::svg_ros::MVServ > 
template<>
struct DataType< ::svg_ros::MVServResponse>
{
  static const char* value()
  {
    return DataType< ::svg_ros::MVServ >::value();
  }
  static const char* value(const ::svg_ros::MVServResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // SVG_ROS_MESSAGE_MVSERV_H
